!print
?print
?readline
input <- as.integer(readline(prompt="Enter "))
print(input)
?as.matrix
input <- as.matrix(readline(prompt="Enter "))
print(input)
View(input)
View(input)
input <- as.vector(readline(prompt="Enter "))
print(input)
print(as.matrix(input))
input <- as.table(readline(prompt="Enter "))
input <- as.vector(readline(prompt="Enter "))
print(input)
print(as.table(input))
x <- scan("gamma.dat")
scan("README.md")
nrows <- as.integer(readline(prompt="Enter number of rows: "))
ncols <- as.integer(readline(prompt="Enter number of columns: "))
flat_matrix <- c(1,2,3,1,2,3,1,2,3)
matrix(flat_matrix, nrow = nrows, ncol = ncols)
paste("Enter ", nrows*ncols, " numbers")
paste("Enter", nrows*ncols, "numbers")
flat_matrix <- as.vector(readline())
flat_matrix <- as.vector(readline())
paste("Enter", nrows*ncols, "numbers: ");
print(paste("Enter", nrows*ncols, "numbers: "))
flat_matrix <- as.vector(readline())
print(paste("Enter", nrows*ncols, "numbers: "))
flat_matrix <- as.vector(readline())
matrix(flat_matrix, nrow = nrows, ncol = ncols)
print(paste("Enter", nrows*ncols, "numbers: "))
flat_matrix <- c(readline())
matrix(flat_matrix, nrow = nrows, ncol = ncols)
input <- read.table("data.txt", header=FALSE, sep=" ")
input <- read.table("data.txt", header=FALSE, sep=" ")
input <- read.table("data.txt", header=FALSE, sep=" ")
input
View(input)
input[1,1] + input[1,2]
a <- as.matrix(input)
View(a)
View(input)
View(a)
View(input)
input <- as.matrix(read.table("data.txt", header=FALSE, sep=" "))
input <- as.matrix(read.table("data.txt", header=FALSE, sep=" "))
View(input)
input <- as.matrix(read.table("data.txt", header=FALSE, sep=" "))
filename <- readline(prompt="Enter input file's path: ")
source("D:/Piotrek/Studia/AGH/Semestr 3/Statystyka/2DRandomVariableDistribution/source.R")
source("D:/Piotrek/Studia/AGH/Semestr 3/Statystyka/2DRandomVariableDistribution/source.R")
print(prob(input), boundary(input, 1), boundary(input, 2))
print(prob(input))
print(prob(input))
print(boundary(input, 1))
print(boundary(input, 2))
print(prob(input))
print(boundary(input, 1))
print(boundary(input, 2))
printc((boundary(input, 2)))
print(c((boundary(input, 2)))
print(c((boundary(input, 2)))
print(boundary(input, 1))
print(boundary(input, 2))
print(prob(input))
print(prob(input))
print(boundary(input, 1))
print(boundary(input, 2))
View(input)
print("Marginal distribution of x: " + boundary(input, 1))
print("Marginal distribution of x: " ++ boundary(input, 1))
print("Marginal distribution of x: ", boundary(input, 1))
print(paste("Marginal distribution of x: ", boundary(input, 1)))
cat("Marginal distribution of x: ", boundary(input, 1))
cat("Marginal distribution of x:", boundary(input, 1))
cat(prob(input))
cat("Marginal distribution of x:", boundary(input, 1))
print(prob(input))
filename <- readline(prompt="Enter input file's path: ")
input <- as.matrix(read.table(filename, header=FALSE, sep=" "))
print(prob(input))
cat("Marginal distribution of x:", boundary(input, 1))
print("Probability table: ")
print(probability)
probability <- prob(input)
print("Probability table: ")
print(probability)
cat("Marginal distribution of x:", boundary(input, 1))
print(boundary(input, 2))
cat("Marginal distribution of y:", boundary(probability, 2))
cat("Marginal distribution of x:", boundary(probability, 1))
print("Probability table: ")
print(probability)
cat("Marginal distribution of x:", boundary(probability, 1))
cat("Marginal distribution of y:", boundary(probability, 2))
cat("Marginal distribution of x:\n", boundary(probability, 1))
cat("Marginal distribution of y:\n", boundary(probability, 2))
cat("Probability distribution of x under condition that y=1:", conditional(probability, 1, 1))
cat("Probability distribution of x under condition that y=1: ", conditional(probability, 1, 1))
View(input)
?col
conditional <- function(prob, i, v)
{
if (i == 1)
return(prob[,i])
if (i == 2)
{
res <- vector(length = ncol(prob))
x_prob <- boundary(prob, 1)[[v]]
for (j in 1:length(res))
res[[j]] <- prob[[v, j]]/x_prob
return(res)
}
}
cat("Probability distribution of x under condition that y=1: ", conditional(probability, 1, 1))
conditional <- function(prob, i, v)
{
if (i == 1)
return(prob[,v]/sum(prob[,v]))
if (i == 2)
return(prob[v,]/sum(prob[v,]))
}
cat("Probability distribution of x under condition that y=1: ", conditional(probability, 1, 1))
boundary <- function(prob, i)
{
if (i == 1)
return(rowSums(prob, na.rm=FALSE))
if (i == 2)
return(colSums(prob, na.rm=FALSE))
}
cat("Marginal distribution of x:\n", boundary(probability, 1))
cat("Marginal distribution of y:\n", boundary(probability, 2))
cat("Probability distribution of x under condition that y=1: ", conditional(probability, 1, 1))
cat("Probability distribution of y under condition that x=1: ", conditional(probability, 1, 1))
cat("Probability distribution of y under condition that x=1: ", conditional(probability, 2, 1))
cat("Mean value of x: ", mean(probability, 1))
cat("Mean value of y: ", mean(probability, 2))
print("Probability table: ")
print(probability)
print("Covariance matrix: ")
print(covariance(probability))
cat("Probability distribution of x under condition that y=1: ", conditional(probability, 1, 1))
cat("Probability distribution of y under condition that x=1: ", conditional(probability, 2, 1))
cat("Mean value of x: ", mean(probability, 1))
cat("Probability distribution of x under condition that y=1:\n", conditional(probability, 1, 1))
cat("Probability distribution of y under condition that x=1:\n", conditional(probability, 2, 1))
cat("Mean value of x: ", mean(probability, 1))
cat("Mean value of y: ", mean(probability, 2))
print("Covariance matrix: ")
independent <- function(prob)
{
x_bound <- boundary(prob, 1)
y_bound <- boundary(prob, 2)
for(x in 1:nrow(prob))
for(y in 1:ncol(prob))
if(prob[[x,y]] != x_bound[[x]]*y_bound[[y]])
return(FALSE)
return(TRUE)
}
filename <- readline(prompt="Enter input file's path: ")
print(covariance(probability))
cat("Are variables independent?: ", )
cat("Are variables independent?: ", independent(probability))
source("D:/Piotrek/Studia/AGH/Semestr 3/Statystyka/2DRandomVariableDistribution/source.R")
cat("Covariance matrix: ")
cls
clean
clear
source("D:/Piotrek/Studia/AGH/Semestr 3/Statystyka/2DRandomVariableDistribution/source.R")
cat("Probability table:\n")
print(probability)
cat("\nMarginal distribution of x:\n", boundary(probability, 1))
cat("\nMarginal distribution of y:\n", boundary(probability, 2))
source("D:/Piotrek/Studia/AGH/Semestr 3/Statystyka/2DRandomVariableDistribution/source.R")
probability <- prob(input)
cat("Probability table:\n")
print(probability)
cat("\nMarginal distribution of x:\n", boundary(probability, 1))
cat("\n\nMarginal distribution of y:\n", boundary(probability, 2))
cat("\n\nProbability distribution of x under condition that y=1:\n", conditional(probability, 1, 1))
cat("\n\nProbability distribution of y under condition that x=1:\n", conditional(probability, 2, 1))
cat("\n\nMean value of x: ", mean(probability, 1))
cat("\n\nMean value of y: ", mean(probability, 2))
cat("\n\nCovariance matrix: ")
print(covariance(probability))
cat("\nAre variables independent?: ", independent(probability))
source("D:/Piotrek/Studia/AGH/Semestr 3/Statystyka/2DRandomVariableDistribution/source.R")
source("D:/Piotrek/Studia/AGH/Semestr 3/Statystyka/2DRandomVariableDistribution/source.R")
cat(probability)
probability <- prob(input)
cat("Probability table:\n")
print(probability)
cat("\nMarginal distribution of x:\n", boundary(probability, 1))
cat("\n\nMarginal distribution of y:\n", boundary(probability, 2))
cat("\n\nProbability distribution of x under condition that y=1:\n", conditional(probability, 1, 1))
cat("\n\nProbability distribution of y under condition that x=1:\n", conditional(probability, 2, 1))
cat("\n\nMean value of x: ", mean(probability, 1))
cat("\n\nMean value of y: ", mean(probability, 2))
cat("\n\nCovariance matrix:\n")
print(covariance(probability))
cat("\nAre variables independent?: ", independent(probability))
source("D:/Piotrek/Studia/AGH/Semestr 3/Statystyka/2DRandomVariableDistribution/source.R")
probability <- prob(input)
cat("Probability table:\n")
print(probability)
cat("\nMarginal distribution of x:\n", boundary(probability, 1))
cat("\n\nMarginal distribution of y:\n", boundary(probability, 2))
cat("\n\nProbability distribution of x under condition that y=1:\n", conditional(probability, 1, 1))
cat("\n\nProbability distribution of y under condition that x=1:\n", conditional(probability, 2, 1))
cat("\n\nMean value of x: ", mean(probability, 1))
cat("\n\nMean value of y: ", mean(probability, 2))
cat("\n\nCovariance matrix:\n")
print(covariance(probability))
cat("\nAre variables independent?: ", independent(probability))
source("D:/Piotrek/Studia/AGH/Semestr 3/Statystyka/2DRandomVariableDistribution/source.R")
View(probability)
View(input)
View(probability)
cat("\nAre variables X and Y independent?: ", independent(probability))
cat("\nAre X and Y independent?: ", independent(probability))
source("D:/Piotrek/Studia/AGH/Semestr 3/Statystyka/2DRandomVariableDistribution/source.R")
Rscript source.R
gc()
source("D:/Piotrek/Studia/AGH/Semestr 3/Statystyka/2DRandomVariableDistribution/source.R")
source("D:/Piotrek/Studia/AGH/Semestr 3/Statystyka/2DRandomVariableDistribution/source.R")
source("D:/Piotrek/Studia/AGH/Semestr 3/Statystyka/2DRandomVariableDistribution/source.R")
source("D:/Piotrek/Studia/AGH/Semestr 3/Statystyka/2DRandomVariableDistribution/source.R")
source("D:/Piotrek/Studia/AGH/Semestr 3/Statystyka/2DRandomVariableDistribution/source.R")
source("D:/Piotrek/Studia/AGH/Semestr 3/Statystyka/2DRandomVariableDistribution/source.R")
source("D:/Piotrek/Studia/AGH/Semestr 3/Statystyka/2DRandomVariableDistribution/source.R")
source("D:/Piotrek/Studia/AGH/Semestr 3/Statystyka/2DRandomVariableDistribution/source.R")
